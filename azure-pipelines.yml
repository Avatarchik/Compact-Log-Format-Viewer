# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

name: 'Win & OSX Build'

variables:
  buildConfiguration: 'Release'

trigger:
- master


jobs:
- job: ServerTests
  displayName: 'Server Project Tests'
  continueOnError: false
  steps:
    - task: DotNetCoreCLI@2
      displayName: 'dotnet test'
      inputs:
        command: test
        workingDirectory: LogViewer.Server.Tests

# Windows Build
- job: WinBuild
  dependsOn: ServerTests
  displayName: 'Windows Build'
  pool:
    vmImage: 'windows-2019'
  steps:
    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore'
      inputs:
        workingDirectory: LogViewer.Server

    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        workingDirectory: LogViewer.Server

    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish - Create Self Contained WebAPI for Windows'
      inputs:
        command: publish
        publishWebProjects: false
        arguments: '-r win10-x64 --output bin/dist/win'
        zipAfterPublish: false
        modifyOutputPath: false
        workingDirectory: LogViewer.Server

    - task: NodeTool@0
      displayName: 'Use Latest Node'
      inputs:
        versionSpec: 10.x
        checkLatest: true

    - task: Npm@1
      displayName: 'npm install'
      inputs:
        workingDir: LogViewer.Client
        verbose: false

    - task: Npm@1
      displayName: 'npm run tsc (TypeScript compile)'
      inputs:
        command: custom
        workingDir: LogViewer.Client
        verbose: false
        customCommand: 'run tsc'

    - task: Npm@1
      displayName: 'npm run win (builds window outputs AppX & Installer)'
      inputs:
        command: custom
        workingDir: LogViewer.Client
        verbose: false
        customCommand: 'run win'

    - task: CopyFiles@2
      displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)/output'
        Contents: |
          *.appx
          *.exe
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        CleanTargetFolder: true
        OverWrite: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: output'
      inputs:
        ArtifactName: output

# OSX Build
- job: OSXBuild
  dependsOn: ServerTests
  displayName: 'OSX Build'
  pool:
    vmImage: 'macOS-10.13'
  steps:
    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore'
      inputs:
        workingDirectory: LogViewer.Server

    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        workingDirectory: LogViewer.Server

    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish - Create Self Contained WebAPI for Windows'
      inputs:
        command: publish
        publishWebProjects: false
        arguments: '-r osx.10.11-x64 --output bin/dist/osx'
        zipAfterPublish: false
        modifyOutputPath: false
        workingDirectory: LogViewer.Server

    - task: NodeTool@0
      displayName: 'Use Latest Node'
      inputs:
        versionSpec: 10.x
        checkLatest: true

    - task: Npm@1
      displayName: 'npm install'
      inputs:
        workingDir: LogViewer.Client
        verbose: false

    - task: Npm@1
      displayName: 'npm run tsc (TypeScript compile)'
      inputs:
        command: custom
        workingDir: LogViewer.Client
        verbose: false
        customCommand: 'run tsc'

    - task: Npm@1
      displayName: 'npm run mac (builds Mac output - DMG)'
      inputs:
        command: custom
        workingDir: LogViewer.Client
        verbose: false
        customCommand: 'run mac'

    - task: CopyFiles@2
      displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)/output'
        Contents: |
          *.dmg
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        CleanTargetFolder: true
        OverWrite: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: output'
      inputs:
        ArtifactName: output